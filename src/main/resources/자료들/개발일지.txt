2022. 1. 10
    주요 기능 추가)
        itemController에 있는 검증 로직 (maliciousClientApproachCatcher) <- 악의적인 사용자 접근(하나만 들어와야 하는 파라미터를 두 개 넣는 행위)를 차단

2022. 1. 12
    주요 기능 추가)
        Item 엔티티와 Review, File 엔티티를 서비스단에서 (비지니스 로직을 통해) 묶었고, 그 결과로 뷰로 적당한 데이터를 전달할 수 있게 됐다.
        즉, 상품 기능인 Item-Review-File의 작업이 90%정도 끝이 난 상황
        (나머지 10%는 검증 기능, 자잘한 수정사항, 내가 검토하지 못한 추가 기능 및 버그들이다.)

    이후 해야 할 일)
        이제 주문 기능을 개발해야 한다. 이 프로젝트는 크게 세 파트 즉, 회원, 상품, 주문으로 나눌 수 있다.
        회원, 상품이 어느정도 끝났으니 회원과 상품을 이을 수 있는 주문 기능이 필요하다.
        하루 이틀정도.... 걸리지 않을까 생각 중.

    전체 진행률)
        필수 기능 60%
        옵션 기능 (게시판) 0%
        css 등 디자인 40%

2022. 1. 14
    주요 기능 추가)
        Item(상품) 내에 카테고리 별로 상품을 확인할 수 있는 기능을 추가했다. 와.. 로직이 너무 복잡하게 짜여 있어서 내가 며칠 전에 짠 코드임에도 불구하고 방법을 생각하고 기능을 추가하는데 한참이 걸렸다.
        개발 경력이 높아지면 코드들이 좀 읽히려나... 머리가 너무 아프다.
        그래도 (지금부터 자기 자랑이 이어진다) 설계를 잘해서 그런지 로직들을 읽고 나니까 핵심 비지니스 로직을 손대지 않고 기능을 추가할 수 있었다.
        컨트롤러에서 라우팅만 연결해주고, 레포지토리에서 각각의 카테고리를 페이징으로 가지고 오는 쿼리를 만들어주고, 비지니스 로직에서는 라우팅 결과를 받아서 각각의 쿼리만 연결해주는.
        나 이거 좀 잘한 듯..
        + JPA에서 싱글 테이블 전략으로 엔티티 3개 (BOOK, LECTURE, ETC)를 연결했다. 그로 인해 D_TYPE이 생겼는데, 이걸 엔티티 내에서 활용할 수 있는 방법을 모르겠다.
            왜냐하면 ITEM 엔티티 내에는 DTYPE 필드가 없었기 때문인데... 그래서 지금은 jpql에서 DTYPE 조회만 가능한 상황이고 서버로 가져와서 활용을 하지는 못하고 있다.
            그래서 부득이하게 상품수량으로 서버에서는 각각의 엔티티를 식별하고 있는데.. (다행히 상품 수량으로 BOOK, LECTURE, ETC를 판별할 수 있더라.) 정상적인 방법은 아닌거 같다. 방법이 뭐가 있을까.

    전체 진행률)
        필수 기능 85~90%
        css 등 디자인 50..? 60..% 하기 싫음.. 디자인 너무 어렵다.